{"ast":null,"code":"var _jsxFileName = \"/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer } from \"react\";\nimport { validate } from '../../util/validators';\nimport \"./Input.css\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        //copies old state object into new obj\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    default:\n      return state;\n  }\n};\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n  const changeHandler = event => {\n    //store value and validate\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, props.label), element, !inputState.isValid && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }\n  }, props.errorText));\n};\nexport default Input;","map":{"version":3,"names":["React","useReducer","validate","inputReducer","state","action","type","value","val","isValid","validators","Input","props","inputState","dispatch","changeHandler","event","target","element","createElement","id","placeholder","onChange","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","htmlFor","label","errorText"],"sources":["/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n\nimport { validate } from '../../util/validators'\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n    switch(action.type) {\n        case 'CHANGE':\n            return {\n                //copies old state object into new obj\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            }\n        default:\n            return state;\n    }\n}\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {value:'', isValid: false})\n\n    const changeHandler = event => {\n        //store value and validate\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators})\n    }\n\n    const element = props.element === 'input' ? (\n        <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} value={inputState.value}/> \n    ) : (\n        <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} value={inputState.value}/>\n    );\n\n    \n\n    return (\n        <div className={`form-control ${!inputState.isValid && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && <p>{props.errorText}</p>}\n        </div>\n    )\n};\n\nexport default Input;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAEzC,SAASC,QAAQ,QAAQ,uBAAuB;AAChD,OAAO,aAAa;AAEpB,MAAMC,YAAY,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,QAAQ;MACT,OAAO;QACH;QACA,GAAGF,KAAK;QACRG,KAAK,EAAEF,MAAM,CAACG,GAAG;QACjBC,OAAO,EAAEP,QAAQ,CAACG,MAAM,CAACG,GAAG,EAAEH,MAAM,CAACK,UAAU;MACnD,CAAC;IACL;MACI,OAAON,KAAK;EACpB;AACJ,CAAC;AAED,MAAMO,KAAK,GAAGC,KAAK,IAAI;EACnB,MAAM,CAACC,UAAU,EAAEC,QAAQ,CAAC,GAAGb,UAAU,CAACE,YAAY,EAAE;IAACI,KAAK,EAAC,EAAE;IAAEE,OAAO,EAAE;EAAK,CAAC,CAAC;EAEnF,MAAMM,aAAa,GAAGC,KAAK,IAAI;IAC3B;IACAF,QAAQ,CAAC;MAACR,IAAI,EAAE,QAAQ;MAAEE,GAAG,EAAEQ,KAAK,CAACC,MAAM,CAACV,KAAK;MAAEG,UAAU,EAAEE,KAAK,CAACF;IAAU,CAAC,CAAC;EACrF,CAAC;EAED,MAAMQ,OAAO,GAAGN,KAAK,CAACM,OAAO,KAAK,OAAO,gBACrClB,KAAA,CAAAmB,aAAA;IAAOC,EAAE,EAAER,KAAK,CAACQ,EAAG;IAACd,IAAI,EAAEM,KAAK,CAACN,IAAK;IAACe,WAAW,EAAET,KAAK,CAACS,WAAY;IAACC,QAAQ,EAAEP,aAAc;IAACR,KAAK,EAAEM,UAAU,CAACN,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,gBAE1H5B,KAAA,CAAAmB,aAAA;IAAUC,EAAE,EAAER,KAAK,CAACQ,EAAG;IAACS,IAAI,EAAEjB,KAAK,CAACiB,IAAI,IAAI,CAAE;IAACP,QAAQ,EAAEP,aAAc;IAACR,KAAK,EAAEM,UAAU,CAACN,KAAM;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACpG;EAID,oBACI5B,KAAA,CAAAmB,aAAA;IAAKW,SAAS,EAAG,gBAAe,CAACjB,UAAU,CAACJ,OAAO,IAAI,uBAAwB,EAAE;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC7E5B,KAAA,CAAAmB,aAAA;IAAOY,OAAO,EAAEnB,KAAK,CAACQ,EAAG;IAAAG,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEhB,KAAK,CAACoB,KAAa,CAAC,EAC9Cd,OAAO,EACP,CAACL,UAAU,CAACJ,OAAO,iBAAIT,KAAA,CAAAmB,aAAA;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIhB,KAAK,CAACqB,SAAa,CAC9C,CAAC;AAEd,CAAC;AAED,eAAetB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module"}