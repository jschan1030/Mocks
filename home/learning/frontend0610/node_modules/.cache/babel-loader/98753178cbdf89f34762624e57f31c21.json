{"ast":null,"code":"var _jsxFileName = \"/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/shared/components/FormElements/Input.js\";\nimport React, { useReducer, useEffect } from \"react\";\nimport { validate } from '../../util/validators';\nimport \"./Input.css\";\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        //copies old state object into new obj\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH':\n      return {\n        //copies old state object into new obj\n        ...state,\n        isTouched: true\n      };\n    default:\n      return state;\n  }\n};\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: '',\n    isValid: false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n  const changeHandler = event => {\n    //store value and validate\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n  const element = props.element === 'input' ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, props.label), element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 61\n    }\n  }, props.errorText));\n};\nexport default Input;","map":{"version":3,"names":["React","useReducer","useEffect","validate","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","id","onInput","touchHandler","changeHandler","event","target","element","createElement","placeholder","onChange","onBlur","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","rows","className","htmlFor","label","errorText"],"sources":["/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/shared/components/FormElements/Input.js"],"sourcesContent":["import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators'\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n    switch(action.type) {\n        case 'CHANGE':\n            return {\n                //copies old state object into new obj\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            }\n        case 'TOUCH':\n            return {\n                //copies old state object into new obj\n                ...state,\n                isTouched: true\n            }\n        default:\n            return state;\n    }\n}\n\nconst Input = props => {\n    const [inputState, dispatch] = useReducer(inputReducer, {value:'', isValid: false})\n\n    const {id, onInput} = props;\n    const {value, isValid} = inputState\n    useEffect(() => {\n        onInput(id, value, isValid)\n    }, [id, value, isValid, onInput])\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        })\n    }\n    const changeHandler = event => {\n        //store value and validate\n        dispatch({type: 'CHANGE', val: event.target.value, validators: props.validators})\n    }\n\n    const element = props.element === 'input' ? (\n        <input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/> \n    ) : (\n        <textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} onBlur={touchHandler} value={inputState.value}/>\n    );\n\n    \n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched &&'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    )\n};\n\nexport default Input;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}