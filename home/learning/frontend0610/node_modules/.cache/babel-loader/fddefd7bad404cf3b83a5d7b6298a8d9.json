{"ast":null,"code":"var _jsxFileName = \"/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/places/pages/UpdatePlace.js\";\nimport React from \"react\";\nimport { useParams } from 'react-router-dom';\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nconst DUMMY_PLACES = [{\n  id: 'p1',\n  title: 'Empire State Building',\n  description: 'One of the best skyscrapers ever.',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/Empire_State_Building_%28aerial_view%29.jpg/250px-Empire_State_Building_%28aerial_view%29.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u1'\n}, {\n  id: 'p2',\n  title: 'Empire State Building',\n  description: 'One of the best skyscrapers ever.',\n  imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/Empire_State_Building_%28aerial_view%29.jpg/250px-Empire_State_Building_%28aerial_view%29.jpg',\n  address: '20 W 34th St, New York, NY 10001',\n  location: {\n    lat: 40.7484405,\n    lng: -73.9878584\n  },\n  creator: 'u2'\n}];\nconst UpdatePlace = () => {\n  const placeId = useParams().placeId;\n  const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n  if (!identifiedPlace) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Could not find place!\"));\n  }\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    onInput: () => {},\n    value: identifiedPlace.title,\n    valid: true,\n    errorText: \"Please enter a valid title.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    type: \"text\",\n    label: \"Description\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    onInput: () => {},\n    value: identifiedPlace.description,\n    valid: true,\n    errorText: \"Please enter a valid description.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n};\nexport default UpdatePlace;","map":{"version":3,"names":["React","useParams","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","DUMMY_PLACES","id","title","description","imageUrl","address","location","lat","lng","creator","UpdatePlace","placeId","identifiedPlace","find","p","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","element","type","label","validators","onInput","value","valid","errorText"],"sources":["/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/places/pages/UpdatePlace.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from 'react-router-dom';\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\n\nconst DUMMY_PLACES = [\n    {\n        id: 'p1',\n        title: 'Empire State Building',\n        description: 'One of the best skyscrapers ever.',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/Empire_State_Building_%28aerial_view%29.jpg/250px-Empire_State_Building_%28aerial_view%29.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat:40.7484405,\n            lng:-73.9878584\n        },\n        creator:'u1'\n    },\n    {\n        id: 'p2',\n        title: 'Empire State Building',\n        description: 'One of the best skyscrapers ever.',\n        imageUrl: 'https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/Empire_State_Building_%28aerial_view%29.jpg/250px-Empire_State_Building_%28aerial_view%29.jpg',\n        address: '20 W 34th St, New York, NY 10001',\n        location: {\n            lat:40.7484405,\n            lng:-73.9878584\n        },\n        creator:'u2'\n    }\n]\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n\n    const identifiedPlace = DUMMY_PLACES.find(p => p.id === placeId);\n\n    if (!identifiedPlace) {\n        return <div className=\"center\">\n            <h2>Could not find place!</h2>\n        </div>\n    }\n\n    return <form>\n        <Input id=\"title\" element=\"input\" type=\"text\" label=\"Title\" validators={[VALIDATOR_REQUIRE()]} onInput={() => {}} value={identifiedPlace.title} valid={true} errorText=\"Please enter a valid title.\"/>\n        <Input id=\"description\" element=\"textarea\" type=\"text\" label=\"Description\" validators={[VALIDATOR_MINLENGTH(5)]} onInput={() => {}} value={identifiedPlace.description} valid={true} errorText=\"Please enter a valid description.\"/>\n    </form>\n}\n\nexport default UpdatePlace;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAE5C,OAAOC,KAAK,MAAM,4CAA4C;AAC9D,OAAOC,MAAM,MAAM,6CAA6C;AAChE,SAASC,mBAAmB,EAAEC,iBAAiB,QAAQ,8BAA8B;AAErF,MAAMC,YAAY,GAAG,CACjB;EACIC,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,mCAAmC;EAChDC,QAAQ,EAAE,yJAAyJ;EACnKC,OAAO,EAAE,kCAAkC;EAC3CC,QAAQ,EAAE;IACNC,GAAG,EAAC,UAAU;IACdC,GAAG,EAAC,CAAC;EACT,CAAC;EACDC,OAAO,EAAC;AACZ,CAAC,EACD;EACIR,EAAE,EAAE,IAAI;EACRC,KAAK,EAAE,uBAAuB;EAC9BC,WAAW,EAAE,mCAAmC;EAChDC,QAAQ,EAAE,yJAAyJ;EACnKC,OAAO,EAAE,kCAAkC;EAC3CC,QAAQ,EAAE;IACNC,GAAG,EAAC,UAAU;IACdC,GAAG,EAAC,CAAC;EACT,CAAC;EACDC,OAAO,EAAC;AACZ,CAAC,CACJ;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAMC,OAAO,GAAGhB,SAAS,CAAC,CAAC,CAACgB,OAAO;EAEnC,MAAMC,eAAe,GAAGZ,YAAY,CAACa,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACb,EAAE,KAAKU,OAAO,CAAC;EAEhE,IAAI,CAACC,eAAe,EAAE;IAClB,oBAAOlB,KAAA,CAAAqB,aAAA;MAAKC,SAAS,EAAC,QAAQ;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC1B5B,KAAA,CAAAqB,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,uBAAyB,CAC5B,CAAC;EACV;EAEA,oBAAO5B,KAAA,CAAAqB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACH5B,KAAA,CAAAqB,aAAA,CAACnB,KAAK;IAACK,EAAE,EAAC,OAAO;IAACsB,OAAO,EAAC,OAAO;IAACC,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC,OAAO;IAACC,UAAU,EAAE,CAAC3B,iBAAiB,CAAC,CAAC,CAAE;IAAC4B,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;IAACC,KAAK,EAAEhB,eAAe,CAACV,KAAM;IAAC2B,KAAK,EAAE,IAAK;IAACC,SAAS,EAAC,6BAA6B;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACtM5B,KAAA,CAAAqB,aAAA,CAACnB,KAAK;IAACK,EAAE,EAAC,aAAa;IAACsB,OAAO,EAAC,UAAU;IAACC,IAAI,EAAC,MAAM;IAACC,KAAK,EAAC,aAAa;IAACC,UAAU,EAAE,CAAC5B,mBAAmB,CAAC,CAAC,CAAC,CAAE;IAAC6B,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;IAACC,KAAK,EAAEhB,eAAe,CAACT,WAAY;IAAC0B,KAAK,EAAE,IAAK;IAACC,SAAS,EAAC,mCAAmC;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CACjO,CAAC;AACX,CAAC;AAED,eAAeZ,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module"}