{"ast":null,"code":"var _jsxFileName = \"/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/places/pages/NewPlace.js\";\nimport React, { useCallback, useReducer } from \"react\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\nimport './NewPlace.css';\n\n//formReducer lecture 64\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        // if one part of the form is false then the whole thing is false\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: {\n            value: action.value,\n            isValid: action.isValid\n          },\n          isValid: formIsValid\n        }\n      };\n    default:\n      return state;\n  }\n};\nconst NewPlace = () => {\n  // useReducer returns something\n  // in this case use object destructuring\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    isValid: false\n  });\n  // to avoid infinite loop, useCallBack() wrapping\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: \"place-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"title\",\n    element: \"input\",\n    type: \"text\",\n    label: \"Title\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a valid title.\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"description\",\n    element: \"textarea\",\n    type: \"text\",\n    label: \"description\",\n    validators: [VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid description (at least 5 char).\",\n    onInput: inputHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"ADD PLACE\"));\n};\nexport default NewPlace;","map":{"version":3,"names":["React","useCallback","useReducer","Input","Button","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","formReducer","state","action","type","formIsValid","inputId","inputs","isValid","value","NewPlace","formState","dispatch","title","description","inputHandler","id","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","element","label","validators","errorText","onInput","disabled"],"sources":["/Users/joseph.chan/Documents/GitHub/Mocks/home/learning/frontend0610/src/places/pages/NewPlace.js"],"sourcesContent":["import React, { useCallback, useReducer } from \"react\";\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators'\nimport './NewPlace.css'\n\n//formReducer lecture 64\nconst formReducer = (state, action) => {\n    switch(action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs) {\n                // if one part of the form is false then the whole thing is false\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid\n                }\n                else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: {\n                        value: action.value, isValid: action.isValid\n                    },\n                    isValid: formIsValid\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nconst NewPlace = () => {\n    // useReducer returns something\n    // in this case use object destructuring\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: {\n            title: {\n                value: '',\n                isValid: false\n            },\n            description: {\n                value: '',\n                isValid: false\n            }\n        },\n        isValid: false\n    })\n    // to avoid infinite loop, useCallBack() wrapping\n    const inputHandler = useCallback((id, value, isValid) => {\n        dispatch({type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id})\n    }, [])\n\n    return (\n        <form className=\"place-form\">\n            <Input \n                id='title'\n                element=\"input\" \n                type=\"text\" \n                label=\"Title\" \n                validators={[VALIDATOR_REQUIRE()]} \n                errorText=\"Please enter a valid title.\" \n                onInput={inputHandler}\n            />\n            <Input \n                id='description'\n                element=\"textarea\" \n                type=\"text\" \n                label=\"description\" \n                validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(5)]} \n                errorText=\"Please enter a valid description (at least 5 char).\" \n                onInput={inputHandler}\n            />\n            <Button type=\"submit\" disabled={!formState.isValid}>\n                ADD PLACE\n            </Button>\n        </form>\n    )\n\n}\n\nexport default NewPlace;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}